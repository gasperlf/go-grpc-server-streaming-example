// Code generated by protoc-gen-go. DO NOT EDIT.
// source: livescore.proto

package livescore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TypeNew int32

const (
	TypeNew_UNKOWN      TypeNew = 0
	TypeNew_GOAL        TypeNew = 1
	TypeNew_OFFSIDE     TypeNew = 2
	TypeNew_YELLOW_CARD TypeNew = 3
	TypeNew_RED_CARD    TypeNew = 4
	TypeNew_FINISHED    TypeNew = 5
)

var TypeNew_name = map[int32]string{
	0: "UNKOWN",
	1: "GOAL",
	2: "OFFSIDE",
	3: "YELLOW_CARD",
	4: "RED_CARD",
	5: "FINISHED",
}

var TypeNew_value = map[string]int32{
	"UNKOWN":      0,
	"GOAL":        1,
	"OFFSIDE":     2,
	"YELLOW_CARD": 3,
	"RED_CARD":    4,
	"FINISHED":    5,
}

func (x TypeNew) String() string {
	return proto.EnumName(TypeNew_name, int32(x))
}

func (TypeNew) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{0}
}

type GetGamesListRequest struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGamesListRequest) Reset()         { *m = GetGamesListRequest{} }
func (m *GetGamesListRequest) String() string { return proto.CompactTextString(m) }
func (*GetGamesListRequest) ProtoMessage()    {}
func (*GetGamesListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{0}
}

func (m *GetGamesListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGamesListRequest.Unmarshal(m, b)
}
func (m *GetGamesListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGamesListRequest.Marshal(b, m, deterministic)
}
func (m *GetGamesListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGamesListRequest.Merge(m, src)
}
func (m *GetGamesListRequest) XXX_Size() int {
	return xxx_messageInfo_GetGamesListRequest.Size(m)
}
func (m *GetGamesListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGamesListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGamesListRequest proto.InternalMessageInfo

func (m *GetGamesListRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type GetGamesListResponse struct {
	Games                []*Game  `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGamesListResponse) Reset()         { *m = GetGamesListResponse{} }
func (m *GetGamesListResponse) String() string { return proto.CompactTextString(m) }
func (*GetGamesListResponse) ProtoMessage()    {}
func (*GetGamesListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{1}
}

func (m *GetGamesListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGamesListResponse.Unmarshal(m, b)
}
func (m *GetGamesListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGamesListResponse.Marshal(b, m, deterministic)
}
func (m *GetGamesListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGamesListResponse.Merge(m, src)
}
func (m *GetGamesListResponse) XXX_Size() int {
	return xxx_messageInfo_GetGamesListResponse.Size(m)
}
func (m *GetGamesListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGamesListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGamesListResponse proto.InternalMessageInfo

func (m *GetGamesListResponse) GetGames() []*Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type GetNewsGameRequest struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewsGameRequest) Reset()         { *m = GetNewsGameRequest{} }
func (m *GetNewsGameRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewsGameRequest) ProtoMessage()    {}
func (*GetNewsGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{2}
}

func (m *GetNewsGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewsGameRequest.Unmarshal(m, b)
}
func (m *GetNewsGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewsGameRequest.Marshal(b, m, deterministic)
}
func (m *GetNewsGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewsGameRequest.Merge(m, src)
}
func (m *GetNewsGameRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewsGameRequest.Size(m)
}
func (m *GetNewsGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewsGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewsGameRequest proto.InternalMessageInfo

func (m *GetNewsGameRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type GetNewsGameResponse struct {
	New                  *New     `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewsGameResponse) Reset()         { *m = GetNewsGameResponse{} }
func (m *GetNewsGameResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewsGameResponse) ProtoMessage()    {}
func (*GetNewsGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{3}
}

func (m *GetNewsGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewsGameResponse.Unmarshal(m, b)
}
func (m *GetNewsGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewsGameResponse.Marshal(b, m, deterministic)
}
func (m *GetNewsGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewsGameResponse.Merge(m, src)
}
func (m *GetNewsGameResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewsGameResponse.Size(m)
}
func (m *GetNewsGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewsGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewsGameResponse proto.InternalMessageInfo

func (m *GetNewsGameResponse) GetNew() *New {
	if m != nil {
		return m.New
	}
	return nil
}

type PublishNewRequest struct {
	New                  *New     `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	Game                 string   `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishNewRequest) Reset()         { *m = PublishNewRequest{} }
func (m *PublishNewRequest) String() string { return proto.CompactTextString(m) }
func (*PublishNewRequest) ProtoMessage()    {}
func (*PublishNewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{4}
}

func (m *PublishNewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishNewRequest.Unmarshal(m, b)
}
func (m *PublishNewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishNewRequest.Marshal(b, m, deterministic)
}
func (m *PublishNewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishNewRequest.Merge(m, src)
}
func (m *PublishNewRequest) XXX_Size() int {
	return xxx_messageInfo_PublishNewRequest.Size(m)
}
func (m *PublishNewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishNewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishNewRequest proto.InternalMessageInfo

func (m *PublishNewRequest) GetNew() *New {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *PublishNewRequest) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

type PublishNewResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishNewResponse) Reset()         { *m = PublishNewResponse{} }
func (m *PublishNewResponse) String() string { return proto.CompactTextString(m) }
func (*PublishNewResponse) ProtoMessage()    {}
func (*PublishNewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{5}
}

func (m *PublishNewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishNewResponse.Unmarshal(m, b)
}
func (m *PublishNewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishNewResponse.Marshal(b, m, deterministic)
}
func (m *PublishNewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishNewResponse.Merge(m, src)
}
func (m *PublishNewResponse) XXX_Size() int {
	return xxx_messageInfo_PublishNewResponse.Size(m)
}
func (m *PublishNewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishNewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishNewResponse proto.InternalMessageInfo

func (m *PublishNewResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Game struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TeamLocal            string   `protobuf:"bytes,2,opt,name=team_local,json=teamLocal,proto3" json:"team_local,omitempty"`
	TeamVisitor          string   `protobuf:"bytes,3,opt,name=team_visitor,json=teamVisitor,proto3" json:"team_visitor,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}
func (*Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{6}
}

func (m *Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game.Unmarshal(m, b)
}
func (m *Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game.Marshal(b, m, deterministic)
}
func (m *Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game.Merge(m, src)
}
func (m *Game) XXX_Size() int {
	return xxx_messageInfo_Game.Size(m)
}
func (m *Game) XXX_DiscardUnknown() {
	xxx_messageInfo_Game.DiscardUnknown(m)
}

var xxx_messageInfo_Game proto.InternalMessageInfo

func (m *Game) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Game) GetTeamLocal() string {
	if m != nil {
		return m.TeamLocal
	}
	return ""
}

func (m *Game) GetTeamVisitor() string {
	if m != nil {
		return m.TeamVisitor
	}
	return ""
}

func (m *Game) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type New struct {
	Type                 TypeNew  `protobuf:"varint,1,opt,name=type,proto3,enum=livescore.TypeNew" json:"type,omitempty"`
	Team                 string   `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Min                  int32    `protobuf:"varint,3,opt,name=min,proto3" json:"min,omitempty"`
	Details              string   `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *New) Reset()         { *m = New{} }
func (m *New) String() string { return proto.CompactTextString(m) }
func (*New) ProtoMessage()    {}
func (*New) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{7}
}

func (m *New) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_New.Unmarshal(m, b)
}
func (m *New) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_New.Marshal(b, m, deterministic)
}
func (m *New) XXX_Merge(src proto.Message) {
	xxx_messageInfo_New.Merge(m, src)
}
func (m *New) XXX_Size() int {
	return xxx_messageInfo_New.Size(m)
}
func (m *New) XXX_DiscardUnknown() {
	xxx_messageInfo_New.DiscardUnknown(m)
}

var xxx_messageInfo_New proto.InternalMessageInfo

func (m *New) GetType() TypeNew {
	if m != nil {
		return m.Type
	}
	return TypeNew_UNKOWN
}

func (m *New) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *New) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *New) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func init() {
	proto.RegisterEnum("livescore.TypeNew", TypeNew_name, TypeNew_value)
	proto.RegisterType((*GetGamesListRequest)(nil), "livescore.GetGamesListRequest")
	proto.RegisterType((*GetGamesListResponse)(nil), "livescore.GetGamesListResponse")
	proto.RegisterType((*GetNewsGameRequest)(nil), "livescore.GetNewsGameRequest")
	proto.RegisterType((*GetNewsGameResponse)(nil), "livescore.GetNewsGameResponse")
	proto.RegisterType((*PublishNewRequest)(nil), "livescore.PublishNewRequest")
	proto.RegisterType((*PublishNewResponse)(nil), "livescore.PublishNewResponse")
	proto.RegisterType((*Game)(nil), "livescore.Game")
	proto.RegisterType((*New)(nil), "livescore.New")
}

func init() { proto.RegisterFile("livescore.proto", fileDescriptor_ccd9286e45234ec8) }

var fileDescriptor_ccd9286e45234ec8 = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x1f, 0xf9, 0x1a, 0x47, 0x89, 0x19, 0x90, 0xb0, 0x22, 0x52, 0x82, 0x05, 0xa8, 0x42,
	0xa2, 0xa0, 0x70, 0xe0, 0xc4, 0xa1, 0x22, 0x1f, 0x58, 0x58, 0x36, 0x72, 0x81, 0xaa, 0xa7, 0x28,
	0x4d, 0x56, 0x60, 0xd5, 0xc9, 0x06, 0xef, 0xa6, 0x51, 0x7e, 0x39, 0x57, 0x34, 0x9b, 0x35, 0x71,
	0xa8, 0xa2, 0xde, 0x76, 0xde, 0x1b, 0xbf, 0x37, 0xa3, 0x79, 0x86, 0x76, 0x96, 0xde, 0x32, 0x31,
	0xe3, 0x39, 0x3b, 0x5b, 0xe5, 0x5c, 0x72, 0x6c, 0xfc, 0x03, 0xfc, 0xb7, 0xf0, 0x68, 0xcc, 0xe4,
	0x78, 0xba, 0x60, 0x22, 0x4c, 0x85, 0x4c, 0xd8, 0xef, 0x35, 0x13, 0x12, 0x3d, 0xa8, 0xcd, 0xf8,
	0x7a, 0x29, 0xf3, 0xad, 0x67, 0xf4, 0x8c, 0xd3, 0x46, 0x52, 0x94, 0xfe, 0x47, 0x78, 0x7c, 0xf8,
	0x81, 0x58, 0xf1, 0xa5, 0x60, 0xf8, 0x12, 0x2a, 0x3f, 0x09, 0xf4, 0x8c, 0x9e, 0x75, 0xea, 0xf4,
	0xdb, 0x67, 0x7b, 0x53, 0x6a, 0x4e, 0x76, 0xac, 0xff, 0x06, 0x70, 0xcc, 0x64, 0xc4, 0x36, 0x42,
	0xa1, 0xda, 0xee, 0x09, 0xd4, 0x88, 0x9e, 0xa4, 0x73, 0x6d, 0x57, 0xa5, 0x32, 0x98, 0xfb, 0x1f,
	0xd4, 0x78, 0xfb, 0x76, 0x6d, 0xd6, 0x03, 0x6b, 0xc9, 0x36, 0xaa, 0xd7, 0xe9, 0xb7, 0x4a, 0x56,
	0x11, 0xdb, 0x24, 0x44, 0xf9, 0x01, 0x3c, 0xfc, 0xba, 0xbe, 0xce, 0x52, 0xf1, 0x8b, 0x20, 0x6d,
	0x73, 0xef, 0x67, 0x88, 0x60, 0x93, 0xb3, 0x67, 0xaa, 0x29, 0xd4, 0xdb, 0x7f, 0x01, 0x58, 0x96,
	0xd2, 0x23, 0xb4, 0xc0, 0xe4, 0x37, 0x4a, 0xaa, 0x9e, 0x98, 0xfc, 0xc6, 0xcf, 0xc1, 0xa6, 0x11,
	0x09, 0x0f, 0x8a, 0x2d, 0xcc, 0x60, 0x8e, 0x5d, 0x00, 0xc9, 0xa6, 0x8b, 0x49, 0xc6, 0x67, 0xd3,
	0x4c, 0xeb, 0x36, 0x08, 0x09, 0x09, 0xc0, 0xe7, 0xd0, 0x54, 0xf4, 0x6d, 0x2a, 0x52, 0xc9, 0x73,
	0xcf, 0x52, 0x0d, 0x0e, 0x61, 0x3f, 0x76, 0x50, 0xf9, 0x16, 0xf6, 0xe1, 0x2d, 0x16, 0x60, 0x45,
	0x6c, 0x83, 0xaf, 0xc0, 0x96, 0xdb, 0x15, 0x53, 0xa6, 0xad, 0x3e, 0x96, 0xf6, 0xfa, 0xb6, 0x5d,
	0x31, 0x1a, 0x5a, 0xf1, 0xb4, 0x1c, 0xe9, 0x16, 0xcb, 0xd1, 0x1b, 0x5d, 0xb0, 0x16, 0xe9, 0x52,
	0xd9, 0x56, 0x12, 0x7a, 0x92, 0xdd, 0x9c, 0xc9, 0x69, 0x9a, 0x89, 0xc2, 0x4e, 0x97, 0xaf, 0xaf,
	0xa0, 0xa6, 0x05, 0x11, 0xa0, 0xfa, 0x3d, 0xfa, 0x12, 0x5f, 0x46, 0xee, 0x03, 0xac, 0x83, 0x3d,
	0x8e, 0xcf, 0x43, 0xd7, 0x40, 0x07, 0x6a, 0xf1, 0x68, 0x74, 0x11, 0x0c, 0x86, 0xae, 0x89, 0x6d,
	0x70, 0xae, 0x86, 0x61, 0x18, 0x5f, 0x4e, 0x3e, 0x9d, 0x27, 0x03, 0xd7, 0xc2, 0x26, 0xd4, 0x93,
	0xe1, 0x60, 0x57, 0xd9, 0x54, 0x8d, 0x82, 0x28, 0xb8, 0xf8, 0x3c, 0x1c, 0xb8, 0x95, 0xfe, 0x1f,
	0x03, 0x1a, 0x61, 0x31, 0x36, 0xc6, 0xd0, 0x2c, 0x67, 0x0c, 0x4f, 0xca, 0x61, 0xba, 0x9b, 0xd6,
	0xce, 0xb3, 0xa3, 0xbc, 0x3e, 0x56, 0x00, 0xb0, 0x3f, 0x21, 0x3e, 0x2d, 0xb5, 0xdf, 0x09, 0x49,
	0xa7, 0x7b, 0x84, 0xd5, 0x52, 0x11, 0x38, 0xa5, 0x44, 0x62, 0xf7, 0xd0, 0xfa, 0xbf, 0x60, 0x77,
	0x4e, 0x8e, 0xd1, 0x3b, 0xb5, 0x77, 0xc6, 0x75, 0x55, 0xfd, 0x92, 0xef, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x6b, 0xfb, 0x17, 0x15, 0xa5, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LivescoreClient is the client API for Livescore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LivescoreClient interface {
	GetGamesList(ctx context.Context, in *GetGamesListRequest, opts ...grpc.CallOption) (*GetGamesListResponse, error)
	PublishNew(ctx context.Context, in *PublishNewRequest, opts ...grpc.CallOption) (*PublishNewResponse, error)
	GetNewsGame(ctx context.Context, in *GetNewsGameRequest, opts ...grpc.CallOption) (Livescore_GetNewsGameClient, error)
}

type livescoreClient struct {
	cc *grpc.ClientConn
}

func NewLivescoreClient(cc *grpc.ClientConn) LivescoreClient {
	return &livescoreClient{cc}
}

func (c *livescoreClient) GetGamesList(ctx context.Context, in *GetGamesListRequest, opts ...grpc.CallOption) (*GetGamesListResponse, error) {
	out := new(GetGamesListResponse)
	err := c.cc.Invoke(ctx, "/livescore.Livescore/GetGamesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *livescoreClient) PublishNew(ctx context.Context, in *PublishNewRequest, opts ...grpc.CallOption) (*PublishNewResponse, error) {
	out := new(PublishNewResponse)
	err := c.cc.Invoke(ctx, "/livescore.Livescore/PublishNew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *livescoreClient) GetNewsGame(ctx context.Context, in *GetNewsGameRequest, opts ...grpc.CallOption) (Livescore_GetNewsGameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Livescore_serviceDesc.Streams[0], "/livescore.Livescore/GetNewsGame", opts...)
	if err != nil {
		return nil, err
	}
	x := &livescoreGetNewsGameClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Livescore_GetNewsGameClient interface {
	Recv() (*GetNewsGameResponse, error)
	grpc.ClientStream
}

type livescoreGetNewsGameClient struct {
	grpc.ClientStream
}

func (x *livescoreGetNewsGameClient) Recv() (*GetNewsGameResponse, error) {
	m := new(GetNewsGameResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LivescoreServer is the server API for Livescore service.
type LivescoreServer interface {
	GetGamesList(context.Context, *GetGamesListRequest) (*GetGamesListResponse, error)
	PublishNew(context.Context, *PublishNewRequest) (*PublishNewResponse, error)
	GetNewsGame(*GetNewsGameRequest, Livescore_GetNewsGameServer) error
}

// UnimplementedLivescoreServer can be embedded to have forward compatible implementations.
type UnimplementedLivescoreServer struct {
}

func (*UnimplementedLivescoreServer) GetGamesList(ctx context.Context, req *GetGamesListRequest) (*GetGamesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGamesList not implemented")
}
func (*UnimplementedLivescoreServer) PublishNew(ctx context.Context, req *PublishNewRequest) (*PublishNewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishNew not implemented")
}
func (*UnimplementedLivescoreServer) GetNewsGame(req *GetNewsGameRequest, srv Livescore_GetNewsGameServer) error {
	return status.Errorf(codes.Unimplemented, "method GetNewsGame not implemented")
}

func RegisterLivescoreServer(s *grpc.Server, srv LivescoreServer) {
	s.RegisterService(&_Livescore_serviceDesc, srv)
}

func _Livescore_GetGamesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGamesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LivescoreServer).GetGamesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/livescore.Livescore/GetGamesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LivescoreServer).GetGamesList(ctx, req.(*GetGamesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Livescore_PublishNew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishNewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LivescoreServer).PublishNew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/livescore.Livescore/PublishNew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LivescoreServer).PublishNew(ctx, req.(*PublishNewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Livescore_GetNewsGame_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNewsGameRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LivescoreServer).GetNewsGame(m, &livescoreGetNewsGameServer{stream})
}

type Livescore_GetNewsGameServer interface {
	Send(*GetNewsGameResponse) error
	grpc.ServerStream
}

type livescoreGetNewsGameServer struct {
	grpc.ServerStream
}

func (x *livescoreGetNewsGameServer) Send(m *GetNewsGameResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Livescore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "livescore.Livescore",
	HandlerType: (*LivescoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGamesList",
			Handler:    _Livescore_GetGamesList_Handler,
		},
		{
			MethodName: "PublishNew",
			Handler:    _Livescore_PublishNew_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetNewsGame",
			Handler:       _Livescore_GetNewsGame_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "livescore.proto",
}
