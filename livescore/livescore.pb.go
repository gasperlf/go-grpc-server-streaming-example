// Code generated by protoc-gen-go. DO NOT EDIT.
// source: livescore.proto

package livescore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TypeNews int32

const (
	TypeNews_UNKOWN      TypeNews = 0
	TypeNews_GOAL        TypeNews = 1
	TypeNews_OFFSIDE     TypeNews = 2
	TypeNews_YELLOW_CARD TypeNews = 3
	TypeNews_RED_CARD    TypeNews = 4
	TypeNews_FINISHED    TypeNews = 5
)

var TypeNews_name = map[int32]string{
	0: "UNKOWN",
	1: "GOAL",
	2: "OFFSIDE",
	3: "YELLOW_CARD",
	4: "RED_CARD",
	5: "FINISHED",
}

var TypeNews_value = map[string]int32{
	"UNKOWN":      0,
	"GOAL":        1,
	"OFFSIDE":     2,
	"YELLOW_CARD": 3,
	"RED_CARD":    4,
	"FINISHED":    5,
}

func (x TypeNews) String() string {
	return proto.EnumName(TypeNews_name, int32(x))
}

func (TypeNews) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{0}
}

type GetGamesListRequest struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGamesListRequest) Reset()         { *m = GetGamesListRequest{} }
func (m *GetGamesListRequest) String() string { return proto.CompactTextString(m) }
func (*GetGamesListRequest) ProtoMessage()    {}
func (*GetGamesListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{0}
}

func (m *GetGamesListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGamesListRequest.Unmarshal(m, b)
}
func (m *GetGamesListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGamesListRequest.Marshal(b, m, deterministic)
}
func (m *GetGamesListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGamesListRequest.Merge(m, src)
}
func (m *GetGamesListRequest) XXX_Size() int {
	return xxx_messageInfo_GetGamesListRequest.Size(m)
}
func (m *GetGamesListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGamesListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGamesListRequest proto.InternalMessageInfo

func (m *GetGamesListRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type GetGamesListResponse struct {
	Games                []*Game  `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGamesListResponse) Reset()         { *m = GetGamesListResponse{} }
func (m *GetGamesListResponse) String() string { return proto.CompactTextString(m) }
func (*GetGamesListResponse) ProtoMessage()    {}
func (*GetGamesListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{1}
}

func (m *GetGamesListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGamesListResponse.Unmarshal(m, b)
}
func (m *GetGamesListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGamesListResponse.Marshal(b, m, deterministic)
}
func (m *GetGamesListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGamesListResponse.Merge(m, src)
}
func (m *GetGamesListResponse) XXX_Size() int {
	return xxx_messageInfo_GetGamesListResponse.Size(m)
}
func (m *GetGamesListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGamesListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGamesListResponse proto.InternalMessageInfo

func (m *GetGamesListResponse) GetGames() []*Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type GetNewsGameRequest struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewsGameRequest) Reset()         { *m = GetNewsGameRequest{} }
func (m *GetNewsGameRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewsGameRequest) ProtoMessage()    {}
func (*GetNewsGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{2}
}

func (m *GetNewsGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewsGameRequest.Unmarshal(m, b)
}
func (m *GetNewsGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewsGameRequest.Marshal(b, m, deterministic)
}
func (m *GetNewsGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewsGameRequest.Merge(m, src)
}
func (m *GetNewsGameRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewsGameRequest.Size(m)
}
func (m *GetNewsGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewsGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewsGameRequest proto.InternalMessageInfo

func (m *GetNewsGameRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type GetNewsGameResponse struct {
	News                 *News    `protobuf:"bytes,1,opt,name=news,proto3" json:"news,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewsGameResponse) Reset()         { *m = GetNewsGameResponse{} }
func (m *GetNewsGameResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewsGameResponse) ProtoMessage()    {}
func (*GetNewsGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{3}
}

func (m *GetNewsGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewsGameResponse.Unmarshal(m, b)
}
func (m *GetNewsGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewsGameResponse.Marshal(b, m, deterministic)
}
func (m *GetNewsGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewsGameResponse.Merge(m, src)
}
func (m *GetNewsGameResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewsGameResponse.Size(m)
}
func (m *GetNewsGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewsGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewsGameResponse proto.InternalMessageInfo

func (m *GetNewsGameResponse) GetNews() *News {
	if m != nil {
		return m.News
	}
	return nil
}

type PublishNewsRequest struct {
	News                 *News    `protobuf:"bytes,1,opt,name=news,proto3" json:"news,omitempty"`
	Game                 string   `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishNewsRequest) Reset()         { *m = PublishNewsRequest{} }
func (m *PublishNewsRequest) String() string { return proto.CompactTextString(m) }
func (*PublishNewsRequest) ProtoMessage()    {}
func (*PublishNewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{4}
}

func (m *PublishNewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishNewsRequest.Unmarshal(m, b)
}
func (m *PublishNewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishNewsRequest.Marshal(b, m, deterministic)
}
func (m *PublishNewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishNewsRequest.Merge(m, src)
}
func (m *PublishNewsRequest) XXX_Size() int {
	return xxx_messageInfo_PublishNewsRequest.Size(m)
}
func (m *PublishNewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishNewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishNewsRequest proto.InternalMessageInfo

func (m *PublishNewsRequest) GetNews() *News {
	if m != nil {
		return m.News
	}
	return nil
}

func (m *PublishNewsRequest) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

type PublishNewsResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishNewsResponse) Reset()         { *m = PublishNewsResponse{} }
func (m *PublishNewsResponse) String() string { return proto.CompactTextString(m) }
func (*PublishNewsResponse) ProtoMessage()    {}
func (*PublishNewsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{5}
}

func (m *PublishNewsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishNewsResponse.Unmarshal(m, b)
}
func (m *PublishNewsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishNewsResponse.Marshal(b, m, deterministic)
}
func (m *PublishNewsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishNewsResponse.Merge(m, src)
}
func (m *PublishNewsResponse) XXX_Size() int {
	return xxx_messageInfo_PublishNewsResponse.Size(m)
}
func (m *PublishNewsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishNewsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishNewsResponse proto.InternalMessageInfo

func (m *PublishNewsResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Game struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TeamLocal            string   `protobuf:"bytes,2,opt,name=team_local,json=teamLocal,proto3" json:"team_local,omitempty"`
	TeamVisitor          string   `protobuf:"bytes,3,opt,name=team_visitor,json=teamVisitor,proto3" json:"team_visitor,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}
func (*Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{6}
}

func (m *Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game.Unmarshal(m, b)
}
func (m *Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game.Marshal(b, m, deterministic)
}
func (m *Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game.Merge(m, src)
}
func (m *Game) XXX_Size() int {
	return xxx_messageInfo_Game.Size(m)
}
func (m *Game) XXX_DiscardUnknown() {
	xxx_messageInfo_Game.DiscardUnknown(m)
}

var xxx_messageInfo_Game proto.InternalMessageInfo

func (m *Game) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Game) GetTeamLocal() string {
	if m != nil {
		return m.TeamLocal
	}
	return ""
}

func (m *Game) GetTeamVisitor() string {
	if m != nil {
		return m.TeamVisitor
	}
	return ""
}

func (m *Game) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type News struct {
	Type                 TypeNews `protobuf:"varint,1,opt,name=type,proto3,enum=livescore.TypeNews" json:"type,omitempty"`
	Team                 string   `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Min                  int32    `protobuf:"varint,3,opt,name=min,proto3" json:"min,omitempty"`
	Details              string   `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *News) Reset()         { *m = News{} }
func (m *News) String() string { return proto.CompactTextString(m) }
func (*News) ProtoMessage()    {}
func (*News) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccd9286e45234ec8, []int{7}
}

func (m *News) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_News.Unmarshal(m, b)
}
func (m *News) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_News.Marshal(b, m, deterministic)
}
func (m *News) XXX_Merge(src proto.Message) {
	xxx_messageInfo_News.Merge(m, src)
}
func (m *News) XXX_Size() int {
	return xxx_messageInfo_News.Size(m)
}
func (m *News) XXX_DiscardUnknown() {
	xxx_messageInfo_News.DiscardUnknown(m)
}

var xxx_messageInfo_News proto.InternalMessageInfo

func (m *News) GetType() TypeNews {
	if m != nil {
		return m.Type
	}
	return TypeNews_UNKOWN
}

func (m *News) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *News) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *News) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func init() {
	proto.RegisterEnum("livescore.TypeNews", TypeNews_name, TypeNews_value)
	proto.RegisterType((*GetGamesListRequest)(nil), "livescore.GetGamesListRequest")
	proto.RegisterType((*GetGamesListResponse)(nil), "livescore.GetGamesListResponse")
	proto.RegisterType((*GetNewsGameRequest)(nil), "livescore.GetNewsGameRequest")
	proto.RegisterType((*GetNewsGameResponse)(nil), "livescore.GetNewsGameResponse")
	proto.RegisterType((*PublishNewsRequest)(nil), "livescore.PublishNewsRequest")
	proto.RegisterType((*PublishNewsResponse)(nil), "livescore.PublishNewsResponse")
	proto.RegisterType((*Game)(nil), "livescore.Game")
	proto.RegisterType((*News)(nil), "livescore.News")
}

func init() { proto.RegisterFile("livescore.proto", fileDescriptor_ccd9286e45234ec8) }

var fileDescriptor_ccd9286e45234ec8 = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x8b, 0xd3, 0x50,
	0x10, 0x35, 0x6d, 0xfa, 0x35, 0x29, 0xdb, 0x30, 0x15, 0x0c, 0x85, 0xad, 0x6b, 0x64, 0x71, 0x11,
	0x5c, 0xa5, 0xbe, 0x09, 0x3e, 0x2c, 0xf6, 0xc3, 0x60, 0x4c, 0x24, 0x55, 0x17, 0x7d, 0x29, 0xdd,
	0xf6, 0xa2, 0x61, 0xd3, 0xde, 0x9a, 0x7b, 0xdb, 0xa5, 0x7f, 0xdd, 0x27, 0x99, 0x9b, 0x1b, 0x37,
	0xa1, 0x14, 0xf6, 0xed, 0xce, 0x99, 0x93, 0x73, 0xce, 0x30, 0x13, 0xe8, 0x24, 0xf1, 0x8e, 0x89,
	0x05, 0x4f, 0xd9, 0xe5, 0x26, 0xe5, 0x92, 0x63, 0xeb, 0x3f, 0xe0, 0xbe, 0x86, 0xee, 0x84, 0xc9,
	0xc9, 0x7c, 0xc5, 0x84, 0x1f, 0x0b, 0x19, 0xb1, 0x3f, 0x5b, 0x26, 0x24, 0x3a, 0xd0, 0x58, 0xf0,
	0xed, 0x5a, 0xa6, 0x7b, 0xc7, 0x38, 0x33, 0x2e, 0x5a, 0x51, 0x5e, 0xba, 0xef, 0xe1, 0x71, 0xf9,
	0x03, 0xb1, 0xe1, 0x6b, 0xc1, 0xf0, 0x1c, 0x6a, 0xbf, 0x08, 0x74, 0x8c, 0xb3, 0xea, 0x85, 0x35,
	0xe8, 0x5c, 0xde, 0x9b, 0x12, 0x39, 0xca, 0xba, 0xee, 0x2b, 0xc0, 0x09, 0x93, 0x01, 0xbb, 0x13,
	0x0a, 0xd5, 0x76, 0x4f, 0xa0, 0x41, 0xed, 0x59, 0xbc, 0xd4, 0x76, 0x75, 0x2a, 0xbd, 0xa5, 0xfb,
	0x4e, 0xc5, 0xbb, 0xa7, 0x6b, 0xb3, 0xe7, 0x60, 0xae, 0xd9, 0x9d, 0x50, 0xe4, 0xb2, 0x17, 0x51,
	0x23, 0xd5, 0x74, 0x3f, 0x03, 0x7e, 0xd9, 0xde, 0x24, 0xb1, 0xf8, 0xad, 0x40, 0x6d, 0xf5, 0x90,
	0x4f, 0x11, 0xc1, 0xa4, 0x00, 0x4e, 0x45, 0x85, 0x51, 0x6f, 0xf7, 0x1c, 0xba, 0x25, 0x39, 0x1d,
	0xe5, 0x04, 0x2a, 0xfc, 0x56, 0xa9, 0x35, 0xa3, 0x0a, 0xbf, 0x75, 0x53, 0x30, 0x29, 0x2a, 0xe1,
	0x5e, 0x3e, 0x4d, 0xc5, 0x5b, 0xe2, 0x29, 0x80, 0x64, 0xf3, 0xd5, 0x2c, 0xe1, 0x8b, 0x79, 0xa2,
	0x85, 0x5b, 0x84, 0xf8, 0x04, 0xe0, 0x33, 0x68, 0xab, 0xf6, 0x2e, 0x16, 0xb1, 0xe4, 0xa9, 0x53,
	0x55, 0x04, 0x8b, 0xb0, 0xef, 0x19, 0x54, 0xdc, 0x89, 0x59, 0xde, 0x09, 0x07, 0x93, 0x32, 0xe1,
	0x0b, 0x30, 0xe5, 0x7e, 0xc3, 0x94, 0xeb, 0xc9, 0xa0, 0x5b, 0x98, 0xed, 0xeb, 0x7e, 0xc3, 0xb2,
	0xf9, 0x88, 0x40, 0xf3, 0x91, 0x72, 0x3e, 0x1f, 0xbd, 0xd1, 0x86, 0xea, 0x2a, 0x5e, 0x2b, 0xe3,
	0x5a, 0x44, 0x4f, 0x32, 0x5c, 0x32, 0x39, 0x8f, 0x13, 0x91, 0x1b, 0xea, 0xf2, 0xe5, 0x4f, 0x68,
	0xe6, 0x8a, 0x08, 0x50, 0xff, 0x16, 0x7c, 0x0a, 0xaf, 0x03, 0xfb, 0x11, 0x36, 0xc1, 0x9c, 0x84,
	0x57, 0xbe, 0x6d, 0xa0, 0x05, 0x8d, 0x70, 0x3c, 0x9e, 0x7a, 0xc3, 0x91, 0x5d, 0xc1, 0x0e, 0x58,
	0x3f, 0x46, 0xbe, 0x1f, 0x5e, 0xcf, 0x3e, 0x5c, 0x45, 0x43, 0xbb, 0x8a, 0x6d, 0x68, 0x46, 0xa3,
	0x61, 0x56, 0x99, 0x54, 0x8d, 0xbd, 0xc0, 0x9b, 0x7e, 0x1c, 0x0d, 0xed, 0xda, 0xe0, 0xaf, 0x01,
	0x2d, 0x3f, 0xde, 0xb1, 0x29, 0x05, 0xc7, 0x10, 0xda, 0xc5, 0x73, 0xc3, 0x7e, 0xf1, 0xae, 0x0e,
	0x0f, 0xb7, 0xf7, 0xf4, 0x68, 0x5f, 0xef, 0xcb, 0x07, 0xab, 0xb0, 0x46, 0x3c, 0x2d, 0xf0, 0x0f,
	0xaf, 0xa5, 0xd7, 0x3f, 0xd6, 0xd6, 0x6a, 0x01, 0x58, 0x85, 0xfb, 0x2c, 0xa9, 0x1d, 0x9e, 0x79,
	0xaf, 0x7f, 0xac, 0x9d, 0xa9, 0xbd, 0x31, 0x6e, 0xea, 0xea, 0x07, 0x7d, 0xfb, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xb1, 0x13, 0x8f, 0xcf, 0xb3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LiveScoreClient is the client API for LiveScore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LiveScoreClient interface {
	GetGamesList(ctx context.Context, in *GetGamesListRequest, opts ...grpc.CallOption) (*GetGamesListResponse, error)
	PublishNews(ctx context.Context, in *PublishNewsRequest, opts ...grpc.CallOption) (*PublishNewsResponse, error)
	GetNewsGame(ctx context.Context, in *GetNewsGameRequest, opts ...grpc.CallOption) (LiveScore_GetNewsGameClient, error)
}

type liveScoreClient struct {
	cc *grpc.ClientConn
}

func NewLiveScoreClient(cc *grpc.ClientConn) LiveScoreClient {
	return &liveScoreClient{cc}
}

func (c *liveScoreClient) GetGamesList(ctx context.Context, in *GetGamesListRequest, opts ...grpc.CallOption) (*GetGamesListResponse, error) {
	out := new(GetGamesListResponse)
	err := c.cc.Invoke(ctx, "/livescore.LiveScore/GetGamesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveScoreClient) PublishNews(ctx context.Context, in *PublishNewsRequest, opts ...grpc.CallOption) (*PublishNewsResponse, error) {
	out := new(PublishNewsResponse)
	err := c.cc.Invoke(ctx, "/livescore.LiveScore/PublishNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveScoreClient) GetNewsGame(ctx context.Context, in *GetNewsGameRequest, opts ...grpc.CallOption) (LiveScore_GetNewsGameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LiveScore_serviceDesc.Streams[0], "/livescore.LiveScore/GetNewsGame", opts...)
	if err != nil {
		return nil, err
	}
	x := &liveScoreGetNewsGameClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LiveScore_GetNewsGameClient interface {
	Recv() (*GetNewsGameResponse, error)
	grpc.ClientStream
}

type liveScoreGetNewsGameClient struct {
	grpc.ClientStream
}

func (x *liveScoreGetNewsGameClient) Recv() (*GetNewsGameResponse, error) {
	m := new(GetNewsGameResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LiveScoreServer is the server API for LiveScore service.
type LiveScoreServer interface {
	GetGamesList(context.Context, *GetGamesListRequest) (*GetGamesListResponse, error)
	PublishNews(context.Context, *PublishNewsRequest) (*PublishNewsResponse, error)
	GetNewsGame(*GetNewsGameRequest, LiveScore_GetNewsGameServer) error
}

// UnimplementedLiveScoreServer can be embedded to have forward compatible implementations.
type UnimplementedLiveScoreServer struct {
}

func (*UnimplementedLiveScoreServer) GetGamesList(ctx context.Context, req *GetGamesListRequest) (*GetGamesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGamesList not implemented")
}
func (*UnimplementedLiveScoreServer) PublishNews(ctx context.Context, req *PublishNewsRequest) (*PublishNewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishNews not implemented")
}
func (*UnimplementedLiveScoreServer) GetNewsGame(req *GetNewsGameRequest, srv LiveScore_GetNewsGameServer) error {
	return status.Errorf(codes.Unimplemented, "method GetNewsGame not implemented")
}

func RegisterLiveScoreServer(s *grpc.Server, srv LiveScoreServer) {
	s.RegisterService(&_LiveScore_serviceDesc, srv)
}

func _LiveScore_GetGamesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGamesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveScoreServer).GetGamesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/livescore.LiveScore/GetGamesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveScoreServer).GetGamesList(ctx, req.(*GetGamesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveScore_PublishNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishNewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveScoreServer).PublishNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/livescore.LiveScore/PublishNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveScoreServer).PublishNews(ctx, req.(*PublishNewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveScore_GetNewsGame_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNewsGameRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LiveScoreServer).GetNewsGame(m, &liveScoreGetNewsGameServer{stream})
}

type LiveScore_GetNewsGameServer interface {
	Send(*GetNewsGameResponse) error
	grpc.ServerStream
}

type liveScoreGetNewsGameServer struct {
	grpc.ServerStream
}

func (x *liveScoreGetNewsGameServer) Send(m *GetNewsGameResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _LiveScore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "livescore.LiveScore",
	HandlerType: (*LiveScoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGamesList",
			Handler:    _LiveScore_GetGamesList_Handler,
		},
		{
			MethodName: "PublishNews",
			Handler:    _LiveScore_PublishNews_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetNewsGame",
			Handler:       _LiveScore_GetNewsGame_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "livescore.proto",
}
